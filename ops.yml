version: "1"
commands:
  - name: setup:0.2.0
    run: ./node_modules/.bin/ts-node /ops/src/setup.ts
    description: "setup an environment"
    env:
      static:
        - STACK_TYPE=aws-ecs-fargate
        - AWS_REGION=us-east-1
      secrets:
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_ACCOUNT_NUMBER
      configs:
        - DEV_AWS_ECS_FARGATE_STATE
        - STG_AWS_ECS_FARGATE_STATE
        - PRD_AWS_ECS_FARGATE_STATE
        - DEV_AWS_ECS_FARGATE_CLUSTER_VAULT_ARN
        - STG_AWS_ECS_FARGATE_CLUSTER_VAULT_ARN
        - PRD_AWS_ECS_FARGATE_CLUSTER_VAULT_ARN
        - DEV_AWS_ECS_FARGATE_SERVICE_VAULT_ARN
        - STG_AWS_ECS_FARGATE_SERVICE_VAULT_ARN
        - PRD_AWS_ECS_FARGATE_SERVICE_VAULT_ARN
  - name: deploy:0.2.0
    run: ./node_modules/.bin/ts-node /ops/src/deploy.ts
    description: "deploy to an environment"
    env:
      static:
        - STACK_TYPE=aws-ecs-fargate
        - AWS_REGION=us-east-1
      secrets:
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_ACCOUNT_NUMBER
      configs:
        - DEV_AWS_ECS_FARGATE_STATE
        - STG_AWS_ECS_FARGATE_STATE
        - PRD_AWS_ECS_FARGATE_STATE
        - DEV_AWS_ECS_FARGATE_CLUSTER_VAULT_ARN
        - STG_AWS_ECS_FARGATE_CLUSTER_VAULT_ARN
        - PRD_AWS_ECS_FARGATE_CLUSTER_VAULT_ARN
        - DEV_AWS_ECS_FARGATE_SERVICE_VAULT_ARN
        - STG_AWS_ECS_FARGATE_SERVICE_VAULT_ARN
        - PRD_AWS_ECS_FARGATE_SERVICE_VAULT_ARN
  - name: destroy:0.1.0
    run: ./node_modules/.bin/ts-node /ops/src/destroy.ts
    description: "destroy an environment"
    env:
      static:
        - STACK_TYPE=aws-ecs-fargate
        - AWS_REGION=us-east-1
      secrets:
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_ACCOUNT_NUMBER
  - name: ssh:0.1.0
    run: ./node_modules/.bin/ts-node /ops/src/ssh.ts
    description: "connect to bastion with ssh"
    env:
      static:
        - STACK_TYPE=aws-ecs-fargate
        - AWS_REGION=us-east-1
      secrets:
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_ACCOUNT_NUMBER
  - name: tunnel:0.1.0
    run: ./node_modules/.bin/ts-node /ops/src/tunnel.ts
    description: "connect to bastion with ssh"
    env:
      static:
        - STACK_TYPE=aws-ecs-fargate
        - AWS_REGION=us-east-1
      secrets:
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_ACCOUNT_NUMBER
  - name: vault:0.1.0
    run: ./node_modules/.bin/ts-node /ops/src/vault.ts
    description: "manage secrets vault"
    env:
      static:
        - STACK_TYPE=aws-ecs-fargate
        - AWS_REGION=us-east-1
      secrets:
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_ACCOUNT_NUMBER
    help:
      usage: ops run vault <sub-cmd> <--key> <--value>
      arguments: 
        init: 'init the environments vault'
        create: 'set a key in the enviroment vault'
        list: 'list keys in the environment vault'
        remove: ' remove a specific key in the environment vault'
        destroy: 'destroy the environment vault'
pipelines:
  - name: sample-app-pipeline:0.2.0
    description: build a release for deployment on fargate
    env:
      static:
        - DEBIAN_FRONTEND=noninteractive
        - STACK_TYPE=aws-ecs-fargate
        - ORG=schierproducts
        - REPO=sample-app
        - GIT_REPO=grease-monkey
        - REF=docker-deploy-test-1
        - TAG=docker-deploy-test-1
        - AWS_REGION=us-east-1
      secrets:
        - GITHUB_TOKEN
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_ACCOUNT_NUMBER
    events:
      - "github:schierproducts/sample-app:pull_request.merged" 
      - "github:schierproducts/sample-app:create.tag" 
    jobs:
      - name: sample-app-build-job
        description: example build step
        packages:
          - git
          - unzip
          - python
        bind:
        - /Users/dougniccum/Sites/grease-monkey:/ops/application
        steps:
          - curl https://s3.amazonaws.com/aws-cli/awscli-bundle-1.18.200.zip -o awscli-bundle.zip
          - unzip awscli-bundle.zip && ./awscli-bundle/install -b ~/bin/aws
          - export PATH=~/bin:$PATH
          - aws --version
          - git clone https://$GITHUB_TOKEN:x-oauth-basic@github.com/$ORG/$GIT_REPO
          - cd $GIT_REPO && ls -asl
          - git checkout tags/$TAG -b $REF # Checkout for the specific tag
          - sed -i "s,https://,https://${GITHUB_TOKEN}@,g" ./.gitmodules
          - git submodule update --init --recursive # Pulls down the submodules
          #- cd application && ls -asl
          - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_NUMBER.dkr.ecr.us-east-1.amazonaws.com/$REPO
          - docker build -f Dockerfile -t $AWS_ACCOUNT_NUMBER.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO:$REF .
          - docker push $AWS_ACCOUNT_NUMBER.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO:$REF
services:
  - name: sample-app:0.1.0
    description: preview of sample app
    run: node sample-app/app.js
    port: [ '8080:8080' ]
    domain: ""
    env:
      static:
        - PORT=8080
        - DB_HOST=localhost
        - DB_PORT=3600
        - DB_USER=fake
      secrets:
        - SLACK_SIGNING_SECRET
        - SLACK_BOT_TOKEN
    events:
     - "github:schierproducts/sample-app:pull_request.merged"
    trigger:
     - build
     - publish
     - start

